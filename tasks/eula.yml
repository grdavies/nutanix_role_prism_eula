  - name: Accept EULA
    block:
      - name: Generate authorization string for "{{ nutanix_prism_eula_host }}"
        set_fact:
          nutanix_prism_eula_auth_string: "{{ nutanix_prism_eula_username }}:{{ nutanix_prism_eula_password }}"
        no_log: True

      - name: Generate authorization header for "{{ nutanix_prism_eula_host }}"
        set_fact:
          nutanix_prism_eula_auth_api: "Basic {{ nutanix_prism_eula_auth_string | b64encode(encoding='ascii') }}"
        no_log: True

      - ansible.builtin.fail:
          msg: "the variables 'nutanix_prism_eula_full_name', 'nutanix_prism_eula_company_name' and 'nutanix_prism_eula_job_title' must be provided to accept the Nutanix EULA."
        when:
          - nutanix_prism_eula_full_name is not defined or nutanix_prism_eula_full_name == ""
          - nutanix_prism_eula_company_name is not defined or nutanix_prism_eula_company_name == ""
          - nutanix_prism_eula_job_title is not defined or nutanix_prism_eula_job_title == ""

      - name: Accept EULA on "{{ nutanix_pulse_host }}"
        uri:
          url: "https://{{ nutanix_deploy_pc_ip_address }}:{{ nutanix_port }}/PrismGateway/services/rest/v1/eulas/accept"
          method: POST
          validate_certs: "{{ validate_certs }}"
          body_format: json
          body:
            username: "{{ nutanix_prism_eula_full_name }}"
            companyName: "{{ nutanix_prism_eula_company_name }}"
            jobTitle: "{{ nutanix_prism_eula_job_title }}"
          headers:
            Authorization: "{{ nutanix_prism_eula_auth_api }}"
          status_code: 200
          return_content: yes
        register: nutanix_prism_eula_accept_eula
        ignore_errors: no

      - ansible.builtin.fail:
          msg: "the prism EULA acceptance failed."
        when:
          - not nutanix_prism_eula_accept_eula.json.value
